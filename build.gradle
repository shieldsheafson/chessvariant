plugins {
    id "org.jetbrains.kotlin.jvm" version "1.9.22"
    id 'java'
    id 'application'
    id "org.jlleitschuh.gradle.ktlint" version "10.0.0"
}

application {
    mainClass = 'chessnt/src/main/kotlin/DriverKt'
}

jar {
    archiveBaseName = 'gs-gradle'
    archiveVersion =  '0.1.0'
    
}

allprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    // https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-swing
    implementation 'org.apache.xmlgraphics:batik-swing:1.17'

}

repositories {
    mavenCentral()
}


// work around I found online to get KtLint working with gradle
afterEvaluate {
    [
        "processResources",
        "ktlintMainSourceSetFormat",
        "runKtlintFormatOverMainSourceSet",
        "ktlintTestSourceSetFormat",
        "runKtlintFormatOverTestSourceSet",
        "compileKotlin",
        "ktlintKotlinScriptFormat",
        "runKtlintFormatOverKotlinScripts",
        "runKtlintCheckOverMainSourceSet",
        "runKtlintCheckOverTestSourceSet"
    ].forEach { name ->
        tasks.named(name).configure {
            if ("runKtlintFormatOverKotlinScripts" != name) {
                dependsOn("runKtlintFormatOverKotlinScripts")
            }
            if (project.parent != null && project.parent?.name != rootProject.name) {
                dependsOn(":${project.parent?.name}:runKtlintFormatOverKotlinScripts")
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs 'src/main/resources'
        }
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(Copy).all {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
